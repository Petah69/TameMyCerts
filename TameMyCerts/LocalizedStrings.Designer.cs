//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TameMyCerts {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LocalizedStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LocalizedStrings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TameMyCerts.LocalizedStrings", typeof(LocalizedStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The {0} policy module currently does not support standalone certification authorities. ähnelt.
        /// </summary>
        internal static string Events_MODULE_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("Events_MODULE_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error initializing Windows Default policy module:
        ///{0} ähnelt.
        /// </summary>
        internal static string Events_PDEF_FAIL_INIT {
            get {
                return ResourceManager.GetString("Events_PDEF_FAIL_INIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shutting down Windows Default policy module failed:
        ///{0} ähnelt.
        /// </summary>
        internal static string Events_PDEF_FAIL_SHUTDOWN {
            get {
                return ResourceManager.GetString("Events_PDEF_FAIL_SHUTDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Windows Default policy module was unable to verify request {0}:
        ///{1} ähnelt.
        /// </summary>
        internal static string Events_PDEF_FAIL_VERIFY {
            get {
                return ResourceManager.GetString("Events_PDEF_FAIL_VERIFY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Request {0} was denied by the Windows Default policy module. ähnelt.
        /// </summary>
        internal static string Events_PDEF_REQUEST_DENIED {
            get {
                return ResourceManager.GetString("Events_PDEF_REQUEST_DENIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} policy module version {1} is ready to process incoming certificate requests. ähnelt.
        /// </summary>
        internal static string Events_PDEF_SUCCESS_INIT {
            get {
                return ResourceManager.GetString("Events_PDEF_SUCCESS_INIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Certificate template {0} used for Request {1} is configured to build subject from Active Directory, skipping. ähnelt.
        /// </summary>
        internal static string Events_POLICY_NOT_APPLICABLE {
            get {
                return ResourceManager.GetString("Events_POLICY_NOT_APPLICABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to find policy file for {0}. Request {1} will get issued. Expected policy file name: &quot;{2}&quot; ähnelt.
        /// </summary>
        internal static string Events_POLICY_NOT_FOUND {
            get {
                return ResourceManager.GetString("Events_POLICY_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Request {0} for {1} was denied because:
        ///{2} ähnelt.
        /// </summary>
        internal static string Events_REQUEST_DENIED {
            get {
                return ResourceManager.GetString("Events_REQUEST_DENIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Audit mode is enabled for {1}. Request {0} would get denied because:
        ///{2} ähnelt.
        /// </summary>
        internal static string Events_REQUEST_DENIED_AUDIT {
            get {
                return ResourceManager.GetString("Events_REQUEST_DENIED_AUDIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to interpret policy from {0}. Request {1} will get denied. ähnelt.
        /// </summary>
        internal static string Events_REQUEST_DENIED_NO_POLICY {
            get {
                return ResourceManager.GetString("Events_REQUEST_DENIED_NO_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No certificate template information found for request {0}. The request will get denied. ähnelt.
        /// </summary>
        internal static string Events_REQUEST_DENIED_NO_TEMPLATE_INFO {
            get {
                return ResourceManager.GetString("Events_REQUEST_DENIED_NO_TEMPLATE_INFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cryptographic provider &quot;{0}&quot; used to create the certificate request is disallowed. ähnelt.
        /// </summary>
        internal static string ReqVal_Crypto_Provider_Disallowed {
            get {
                return ResourceManager.GetString("ReqVal_Crypto_Provider_Disallowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cryptographic provider &quot;{0}&quot; used to create the certificate request is not allowed. ähnelt.
        /// </summary>
        internal static string ReqVal_Crypto_Provider_Not_Allowed {
            get {
                return ResourceManager.GetString("ReqVal_Crypto_Provider_Not_Allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to determine the cryptographic provider that was used to create the certificate request, but policy requires this information. Probably the certificate request does not contain such information. ähnelt.
        /// </summary>
        internal static string ReqVal_Crypto_Provider_Unknown {
            get {
                return ResourceManager.GetString("ReqVal_Crypto_Provider_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The value &quot;{0}&quot; does match the disallowed pattern {1} for the {2} field. ähnelt.
        /// </summary>
        internal static string ReqVal_Disallow_Match {
            get {
                return ResourceManager.GetString("ReqVal_Disallow_Match", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to extract inner PKCS#10 request from given CMC certificate request. ähnelt.
        /// </summary>
        internal static string ReqVal_Err_Extract_From_Cmc {
            get {
                return ResourceManager.GetString("ReqVal_Err_Extract_From_Cmc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to extract inner PKCS#10 request from given PKCS#7 certificate request. ähnelt.
        /// </summary>
        internal static string ReqVal_Err_Extract_From_Pkcs7 {
            get {
                return ResourceManager.GetString("ReqVal_Err_Extract_From_Pkcs7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to parse the given certificate request. Request type was {0}. ähnelt.
        /// </summary>
        internal static string ReqVal_Err_Parse_Request {
            get {
                return ResourceManager.GetString("ReqVal_Err_Parse_Request", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to parse the given subject distinguished name: {0}. ähnelt.
        /// </summary>
        internal static string ReqVal_Err_Parse_SubjectDn {
            get {
                return ResourceManager.GetString("ReqVal_Err_Parse_SubjectDn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to match pattern &quot;{0}&quot; with value &quot;{1}&quot; for the {2} field. ähnelt.
        /// </summary>
        internal static string ReqVal_Err_Regex {
            get {
                return ResourceManager.GetString("ReqVal_Err_Regex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The {0} field was found {1} times, but is allowed only {2} times. ähnelt.
        /// </summary>
        internal static string ReqVal_Field_Count_Mismatch {
            get {
                return ResourceManager.GetString("ReqVal_Field_Count_Mismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The mandatory {0} field was not found in the request. ähnelt.
        /// </summary>
        internal static string ReqVal_Field_Missing {
            get {
                return ResourceManager.GetString("ReqVal_Field_Missing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The {0} field is not allowed. ähnelt.
        /// </summary>
        internal static string ReqVal_Field_Not_Allowed {
            get {
                return ResourceManager.GetString("ReqVal_Field_Not_Allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No allowed patterns are defined for the {0} field. ähnelt.
        /// </summary>
        internal static string ReqVal_Field_Not_Defined {
            get {
                return ResourceManager.GetString("ReqVal_Field_Not_Defined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The value &quot;{0}&quot; for the {1} field exceeds the maximum allowed length of {2} characters. ähnelt.
        /// </summary>
        internal static string ReqVal_Field_Too_Long {
            get {
                return ResourceManager.GetString("ReqVal_Field_Too_Long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The value &quot;{0}&quot; for the {1} field deceeds of the minimum required length of {2} characters. ähnelt.
        /// </summary>
        internal static string ReqVal_Field_Too_Short {
            get {
                return ResourceManager.GetString("ReqVal_Field_Too_Short", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Information: Reported host name for the certificate request is &quot;{0}&quot;. ähnelt.
        /// </summary>
        internal static string ReqVal_Info_Client_HostName {
            get {
                return ResourceManager.GetString("ReqVal_Info_Client_HostName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The certificate request uses an {0} key pair, but must use an {1} key pair. ähnelt.
        /// </summary>
        internal static string ReqVal_Key_Pair_Mismatch {
            get {
                return ResourceManager.GetString("ReqVal_Key_Pair_Mismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key length of {0} Bits is more than the allowed maximum length of {1} Bits. ähnelt.
        /// </summary>
        internal static string ReqVal_Key_Too_Large {
            get {
                return ResourceManager.GetString("ReqVal_Key_Too_Large", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key length of {0} Bits is less than the required minimum length of {1} Bits. ähnelt.
        /// </summary>
        internal static string ReqVal_Key_Too_Small {
            get {
                return ResourceManager.GetString("ReqVal_Key_Too_Small", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The value &quot;{0}&quot; does not match any of the allowed patterns for the {1} field. ähnelt.
        /// </summary>
        internal static string ReqVal_No_Match {
            get {
                return ResourceManager.GetString("ReqVal_No_Match", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Process &quot;{0}&quot; used to create the certificate request is disallowed. ähnelt.
        /// </summary>
        internal static string ReqVal_Process_Disallowed {
            get {
                return ResourceManager.GetString("ReqVal_Process_Disallowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Process &quot;{0}&quot; used to create the certificate request is not allowed. ähnelt.
        /// </summary>
        internal static string ReqVal_Process_Not_Allowed {
            get {
                return ResourceManager.GetString("ReqVal_Process_Not_Allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to determine the process name that was used to create the certificate request, but policy requires this information. Probably the certificate request does not contain such information. ähnelt.
        /// </summary>
        internal static string ReqVal_Process_Unknown {
            get {
                return ResourceManager.GetString("ReqVal_Process_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The certificate request contains the unsupported Subject Directory Attributes extension. ähnelt.
        /// </summary>
        internal static string ReqVal_Unsupported_Extension_Dir_Attrs {
            get {
                return ResourceManager.GetString("ReqVal_Unsupported_Extension_Dir_Attrs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The certificate request contains an unsupported Subject Alternative Name type with OID {0}. ähnelt.
        /// </summary>
        internal static string ReqVal_Unsupported_San_Type {
            get {
                return ResourceManager.GetString("ReqVal_Unsupported_San_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die unknown ähnelt.
        /// </summary>
        internal static string Unknown {
            get {
                return ResourceManager.GetString("Unknown", resourceCulture);
            }
        }
    }
}
